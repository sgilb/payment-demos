{"version":3,"sources":["../../../src/api/tokens/tokens.js"],"names":["Tokens","config","body","fetch","timeout","method","url","host","headers","Authorization","pk","response","json","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;IAMqBA,M;;;AACjB,kBAAYC,MAAZ,EAAoB;AAAA;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACH;AAED;;;;;;;;;;;;;;;oDAQcC,I;;;;;;AACV,8CAAaA,IAAb;;;uBAE2B,sBACnBC,qBADmB,EAEnB;AAAEC,kBAAAA,OAAO,EAAE,KAAKH,MAAL,CAAYG;AAAvB,iBAFmB,EAGnB;AACIC,kBAAAA,MAAM,EAAE,MADZ;AAEIC,kBAAAA,GAAG,YAAK,KAAKL,MAAL,CAAYM,IAAjB,YAFP;AAGIC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,KAAKR,MAAL,CAAYS;AAA7B,mBAHb;AAIIR,kBAAAA,IAAI,EAAJA;AAJJ,iBAHmB,C;;;AAAjBS,gBAAAA,Q;;uBAUOA,QAAQ,CAACC,I;;;;;;;;;uBAEF,wC;;;AAAdC,gBAAAA,K;sBACAA,K","sourcesContent":["import fetch from 'node-fetch';\r\nimport { determineError } from '../../services/errors';\r\nimport http from '../../services/http';\r\nimport { setTokenType } from '../../services/validation';\r\n\r\n/**\r\n * Class dealing with the /tokens endpoint\r\n *\r\n * @export\r\n * @class Tokens\r\n */\r\nexport default class Tokens {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Exchange card details or a digital wallet payment token for a reference token\r\n     * that can be used later to request a card payment.\r\n     *\r\n     * @memberof Tokens\r\n     * @param {Object} body Token request body.\r\n     * @return {Promise<Object>} A promise to the request token response.\r\n     */\r\n    async request(body) {\r\n        setTokenType(body);\r\n        try {\r\n            const response = await http(\r\n                fetch,\r\n                { timeout: this.config.timeout },\r\n                {\r\n                    method: 'post',\r\n                    url: `${this.config.host}/tokens`,\r\n                    headers: { Authorization: this.config.pk },\r\n                    body\r\n                }\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n"],"file":"tokens.js"}